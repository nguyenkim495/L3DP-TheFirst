#include "MsgDispatcher.h"

MsgDispatcher::MsgDispatcher()
{

}

///////////////////////////////////////////////////////////////////////////////
MsgDispatcher::~MsgDispatcher()
{

}

///////////////////////////////////////////////////////////////////////////////
void MsgDispatcher::Register(MsgReceiver* msgReceiver, MessageType msgType)
{
	m_receivers[msgType].push_back(msgReceiver);
}

///////////////////////////////////////////////////////////////////////////////
void MsgDispatcher::Raise(MessageType msgType, const Message& msg)
{
	if(m_receivers.empty())
		return;
	m_receivers[msgType].back()->OnMsgReceived(msgType, &msg);
}

///////////////////////////////////////////////////////////////////////////////