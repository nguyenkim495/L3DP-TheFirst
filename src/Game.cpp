#include "Game.h"
#include "State\StateMgr.h"
#include "State\LoadingState.h"


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Game::Game():
	Singleton(),
	m_IsInit(false),
	m_stateMgr(nullptr)
{

}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
Game::~Game()
{

}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//I have no idea here, get driver information from App
void Game::Init(irr::IrrlichtDevice* device)
{
	m_device = device;
	m_stateMgr = new StateMgr();
	GetISceneManager()->addCameraSceneNode(0, vector3df(0, 90, 120), vector3df(0, 30, 0));
	m_IsInit = true;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Game::BeginFrame()
{

}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Game::EndFrame()
{

}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool Game::IsInit()
{
	return m_IsInit;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Game::Render()
{
	GetIVideoDriver()->beginScene(true, true, SColor(255,100,101,140));
//	GetISceneManager()->drawAll();
	m_stateMgr->Render();
	GetIVideoDriver()->endScene();
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void Game::Update(float dt)
{
	if(this->m_stateMgr != nullptr)
		this->m_stateMgr->Update(dt);

	
	//test
	auto state = m_stateMgr->Current();
	if(!state)
		this->m_stateMgr->Switch(new LoadingState());
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool Game::OnKeyEvent(irr::EKEY_CODE keyCode)
{
	//??? how to control chracter?
	return false;//??
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool Game::OnMouseEvent(irr::EMOUSE_INPUT_EVENT mouseEvent)
{
	//???
	return false;//???
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
irr::IrrlichtDevice* Game::GetIrrDevice() const
{
	return m_device;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
irr::video::IVideoDriver* Game::GetIVideoDriver() const
{
	return m_device->getVideoDriver();
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
StateMgr* Game::GetStateMgr() const
{
	return m_stateMgr;
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
irr::scene::ISceneManager* Game::GetISceneManager() const
{
	return m_device->getSceneManager();
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

