#include "App.h"
#include <Game.h>

using namespace irr;

static const int SCREEN_WIDTH = 1900;
static const int SCREEN_HEIGHT = 1000;

App* App::m_Instance = 0;
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::CreatApplication()
{
	m_Instance = new App();
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
App* App::GetInstance()
{
	return m_Instance;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::Destroy()
{
	//delete m_Instance;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::Render()
{
	Game::GetInstance()->Render();
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::Update()
{
	App::Render();
	//Game::GetInstance()->Update();
}
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//bool App::OnEvent(irr::SEvent& event)
//{
//
//}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::onKeyEvent(irr::EKEY_CODE keyCode)
{
	Game::GetInstance()->OnKeyEvent(keyCode);
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void App::onMouseEvent(irr::EMOUSE_INPUT_EVENT mouseCode)
{
	Game::GetInstance()->OnMouseEvent(mouseCode);
}

//#pragma comment(lib, "irrKlang.lib") //prefer setting in Game_2012/properties/Linker/Input/Additional Dependencies
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//WIN32
int main(int argc, char** argv) //lol this function, cant run as name Main
{
	App* m_AppGlobal = new App();
	irr::IrrlichtDevice* DEVICE = createDevice(video::EDT_OPENGL, core::dimension2d<u32>(SCREEN_WIDTH, SCREEN_HEIGHT), 32, false, false, true, m_AppGlobal);

	m_AppGlobal->CreatApplication();
	m_AppGlobal->GetInstance()->m_DEVICE = DEVICE;
	m_AppGlobal->GetInstance()->m_DRIVER = DEVICE->getVideoDriver();
	m_AppGlobal->GetInstance()->m_SMGR = DEVICE->getSceneManager();

	DEVICE->setResizable(false);
	m_AppGlobal->GetInstance()->m_DRIVER->beginScene(true, true, video::SColor(255, 255, 255, 255));

	while (m_AppGlobal->GetInstance()->m_DEVICE->run())
	{
		m_AppGlobal->Update();
	}

	delete m_AppGlobal;

	return 0;
}